10/25
[회원가입]
컨롤
도메인/join
--
리퀘
비워 둘 수 없는 상태
패턴과 요구사항에 맞춰서
-> 컨롤의 조인디티오로 와야 함
-> 이 요구사항에 맞지 않는 다면 400을 반환
-> 안맞으면 에러
-> 유저서비스의 체크이메일

디티오가 똑바로 들어오지 않으면 400번을날리는데(서비스의 체크이메일이 만들어서 날림)
저장된게 
비정상 딕셉션 쓰로우 넘겨서 400이 나옴

if 정상적이 었다면 예외처리를 건너 뛰었을 것
이제 옵셔널 유저 파인드바이이메일 찾아볼 것 = 동일한 이메일이 있는지 찾는거

* 옵셔널 = 0 | 1
없거나 있거나 둘 중 하나
쓰는 이유? - 있냐 없냐를 판별하기 위함

체크이메일이 정상종료가 되면 마지막으로 호출된 위치인 조인으로 가짐(서비스)

--
유저서비스
이메일을 쳌하고
save
500은 무조건 서버문제
저장이 완료가 되면 조인이라는 함수가 종료됨
-> 컨트롤러에서 마지막 호출이므로
-> 컨롤에서 정상종료 됐다면 sucess
정상종료가 되지 않았다면 에러가 뜰 것(api~)



[로그인]
로그인 함수 실행

서비스
인증작업 시작
저장을 해놓으면 ㅋ코스튭 디테일스 서비스에 디스유저 = 유저에 공유(내부적으로)
가다가 create로 가면

토큰프로바이더
<표준>
헤더 : 접두어(한칸띄우고)토큰
* UUID
겹치지 않는 랜덤 값
시크릿 _키 => UUID로 하면 좋지
권한 정보를 스트링의 형태로..
      // 권한이 당연히 많을 수 있음
        // 슈퍼관리자 = 모든 권한을 가진 관리자
토큰이 정상발급이 됐다면 리턴됨 -> 유저서비스의

인증되지 않았다면 401 로 날라감

마지막으로 실행된 컨롤의 로그인으로 날ㄹ라감

-----------------------------------------
유저디테일스
데이터를 저장하는 공간, 유저를 들고 있는 공간
계정 만료 여부
잠김 여부
인증 만료 여부
계정 활성화 여부

티테일 서비스
인증 여부를 판단
(로그인을 시도할 때 자동으로 실행 됨)
해서 반환한 값(유저)
-> 디테일로 감(필드 유저)

--
필터
-확인하는 곳
무조건 한번은 실행
토큰이 지나갈 수 있는지 못 지나가는지를 확인

--
시큐리티콘피그


---
*** JSON으로 변환 = 직렬화 과정


클라이언트로 날라가는 과정 안에
만들어 놓으면 알아서 실행되는 toString
데이터 <-> JSON

--
필터유틸스
에러나면 쓰기 위한..
-> 콘피크에..






