1016
데이터
DB라는 공간 = 저장소  only 그 역할만
에 따로 만들어놓음
서버X

서버 = 톰캣: 웹서버
=데이터를 "정제"하는 과정 

항시 같이 만들어 지지만 DB와 서버는 다른 것

외부에서 서버에다 데이터를 전송
정제된 데이터를 DB에 저장

마리아 DB ? - 회사에서 많이 사용

특정 PC에서 요청이 있을 때 그 요청을 받아들여서 보냄
= 요청하는 데이터를 전송
그 데이터를 서버에서 처리 한 뒤 (정제 과정)
DB에 있는 데이터를 반환

PC는 요청과 응답을 할 수 있음
응답 : 광고 링크를 클릭했을 때 그 사이트로 이동

내가 데이터를 보내지 않았어. 보낸게 없어
=> 정보를 보낸게 없는데 응답 
=> 받기만 하는 것도 가능

검색창에 쇼핑페스타라고 입력을 하면 입력을 처리
=> 주고 받음

서버
: 반송불요 (국가에서 주는 뭐 국세청에서 날라온 우편 = 그냥 버림)

응답 처리방법
1. 오롯이 받기만 하는 형태 = get 방식
2. 내가 주고 받는 형태 = post 방식

내가 데이터를 뭘로 주고 받을 것인가?
이미지?
- 서버에 저장이 되어있고
- 그 이미지들을 출력을 하게 됨
- 이게 정확 할수록 (ex 네이버 검색엔진이 명확한 것)

DB가 아닌 서버에 다 저장 되어 이씅ㅁ
데이터를 어떤 형태로 구분 짓느냐(귀찮지만 반드시 구분)

고야이를 보내고
서버에서 고양이 데이터를 받아서
DB에서 고양이 사진을 뒤져옴

DB - 이미지를 구분할 수있는 최소한의 정보와 ㅣㅇ름과 경로
경로 확인 후 서버에서 ㄱ검색 할 수 있게끔 반환시켜주는
이미지가 저장되는 과정에서 똑같은 1111이라면(동일한 이름이라면)
명확하게 어떤 걸 말하는지 모르므로 데이터 이름을 변경하게 됨

f12 톱니바퀴 디스에이브 자바스크립 => save 가능


ex
요청: 고양이
pc 	->		서버	->	DB
	<-			<-
응답

리퀘스트: 보내기
데이터를 좀더 쉽고 빠르게 찾을 수 있는 기능 = SQL

정제된 뒤에 응답을 해주는 과정


클라이언트에 요청을 받아 올 수 있도록 하고


요청한 데이터가 특정 데이터라면 = post
고양이 이미지 ->냥사진

어떤 형태로 넘어가게 되는 가 
쿼리 = 고양이

{query: 고양이}

라고 하는ㄴ 데이터를 보내줌
서버에서 이 데이터를 처리하고 다시 보내줄때
{}이 데이터의 형식 = 제이슨! 

Json
{key: Val}
반드시, 두개가 한쌍인 데이터가 전송이 되는 것
두가지 데이터가 동시에 전해져야함
(반드시가 아닌 경우도 존재)

ex 데이터가 많을 때

{No1: 11, No2: 16, No3: 25}

데이터가 전송되는 순서는 매번 다름
항상 순서가 일정ㅎ하지 않음
(이유를 묻지마)

지금은 제이슨(데이터)만 공부
이 데이터를 maping 해서 사용하는 경우가 많음

제이슨 데이터
주고 받는 과정에서 문자열로 이루어져 있음
이 문자열을 서버에 보내고 원하는 데이터를 얻음
두개가 하나의 제이슨 파일로 넘어가겠ㅈ지
= key 요청사항ㅇ
=> 에 맞게 

중요한건 Key!!
이 키의 이름을 누가 설정 했는가

꼭 하나의 데이터만 주고 받는 경우는 잘없음

PC 	->		서버   DB	
	요청 (JSON)
		(POST)
		(get이면 아무것도 없고고)
겟방식에선 제이슨 없음




-----------------
스프레드 시트
확장 프로그램
Apps Script

실제 개별적 웹사이트 해보려고 하는거면
DB까지 만들어가면서 서버를 만들고 싶진 않으면
서버나 따로 올리는 건 무겁지가 않아서 무료로도 많이
무료 게시 / DB는 여기서 처리하면 좋음

데이터 처리 속도 매우 느림
느리고 작업량이 많음
-> but 무료소 사용 할 수잇는 공간이 큼
복잡하고 빠른게 아니라면~
보안에 신경 쓸 필요X

1스크립트 (전체)

어떤 함수를 외부에서 호출 할 때
특정상황에서 스크립트(myFunction 함수)를 호출해서 실행한 뒤 사라짐
무조건 스크립트 1회 실행 후 스크립트 사라짐


중요
호출을 할때마다 실행되고 !사라진다!
-> 이 공간에서 생성된 데이터는 기억되지않는다

그렇다면 스크립트에서 생성된 데이터를 저장 보관 하려면
-> 어딘가에 기록 해놔야함


변수 만들 때 주로 사용
var (데이터 타입을 자동으로 설정해주는 데이터 타입)

ss (스프레트 시트)

※ 주의 할 점
대문자로 시작한다면 라이브러리임 Ss
변수는 소문자로 선언해야 함

대소문자 구분 굉장히 조심히 작업

승인 필요
고급 /허용
-> 새로운 데이터 추가가 되어 있음





추가할 데이터 하나의 행
[ ] 를 써줌
-----------
**ctrl +  s 저장 (중요 실행이 안될 수도 있음)

작성할 때 Json 데이터가 뭔지 알고 개발 해야 하므로




데이터를 꺼냇 ㅓ출력 해보기

나혼자 쓸때는 스프레드 시트 유용 굿

역으로 json 만들고 출력

반드시 필요한거냐 없어도 되는거냐를 구분해주는 key도 있음

JSON 안에 JSON이 있을 수도 있다. (참고용)
{ { } }

--------------
Apps Script 기본 제공 함수
doGet / doPost
둘다 외부에서 호출이 있을 때에만 실행 됨

어딘가에서 호출 될때 myFunction 이나 data

CRUD
데이터 추가 불러오기 삭제 변경

직접 수행은 스크립트 안에서

갖고온 데이터를 저장하고 싶다면

JSON인식 =변수. / 자동ㅇ완성뜸

저장 = 

외부에서는 둘중 하나만 호출 가능 get or post
근데 CRUD 기능을?  하나의 함수에서 진행해야 한다면?
post 함수 안에 C R U D 중 한개만 실행 

e에 전달된 값이 제이슨 데이터임

보낼 때 mode가
C
R
U
D
로 만들어서 보내주면
e로 받았을 때 CRUD 형태가 오지않겠느냐

분기를 나눠주면
추가를 해줄지 뭘해줄지 가능
-> 늘릴 수 있다.


특정값을 불러오고 변경
PK가 필요

--------------
여러개의 시트
SS ID
s s s ..

---------------
doGet/doPost 처럼 이름을 직접 지어놓은 함수는 6개 정도
-> 그 중 외부에서 호출 가능한 함수는 Get || Post
※ 둘중 하나만 실행 가능

e 라고하는 제이슨 파일을 전달하는 건 가능

------------------
스크립트성 언어들은 의존적, 전부다 실행하려고 하기 때문에
쓰지 않는 건 다 지워주세요. (주석은 상관X)

cf) <Main>이 없어서(java, c ...는 메인 -> 메인 끝남)

부분부분 다 별도로 실행 함
=> 호출할 때 마다 실행 됨

스크립트에 접근할 수 있는 URL = 배포 URL

배포 완료
이미 배포가 완료된 상태에서 코드를 변경 시
-> 재배포 해야함 (지금 코드에 대한 버전이 바뀌었으니까 지금버전 !=이전버전)
-> ** 배포 관리로 들어가야 함 -> 새버전으로 수정
-> 새배포XX (배포 개수가 많아지는것)

※ 배포 URL은 공유하면 안됩니다
= key 관리
= Token 관리
진짜ㅓ 잘해야함









